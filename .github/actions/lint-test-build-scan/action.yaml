name: 'Lint Dockerfile, Build Image, Test & Trivy Scan'
description: 'Github action to Lint, Test & Build Image'
inputs:
  app:
    required: true
  tag:
    required: true
runs:
  using: "composite"
  steps:
    - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.10
          - name: Install Wily
            run: pip install wily==1.20.0
          - name: Build cache and diff
            id: wily
            run: |
              wily build src/ tests/
              DIFF=$(wily diff src/ tests/ --no-detail -r origin/${{ github.event.pull_request.base.ref }})
              echo "$DIFF"

              # Build multine output
              DIFF="${DIFF//'%'/'%25'}"
              DIFF="${DIFF//$'\n'/'%0A'}"
              DIFF="${DIFF//$'\r'/'%0D'}"
              echo "::set-output name=diff::$DIFF"

          - name: Find current PR
            uses: jwalton/gh-find-current-pr@v1
            id: findPr
          - name: Add Wily PR Comment
            uses: marocchino/sticky-pull-request-comment@v2
            if: steps.findPr.outputs.number && steps.wily.outputs.diff != ''
            with:
              recreate: true
              number: ${{ steps.findPr.outputs.number }}
              message: |
                ```
                ${{ steps.wily.outputs.diff }}
                ```
          - name: Add Wily PR Comment
            uses: marocchino/sticky-pull-request-comment@v2
            if: steps.findPr.outputs.number && steps.wily.outputs.diff == ''
            with:
              recreate: true
              number: ${{ steps.findPr.outputs.number }}
              message: |
                ```
                Wily: No changes in complexity detected.
                ```
    - name: Lint Dockerfile
      uses: hadolint/hadolint-action@master
      with:
        dockerfile: "tools/docker/Dockerfile"

    - name: Build image
      run: make build-container-image APP=${{ inputs.app }} TAG=${{ inputs.tag }}
      shell: sh

    - name: Run linter
      run: make run-container-linter APP=${{ inputs.app }} TAG=${{ inputs.tag }}
      shell: sh

    - name: Unit tests and coverage
      run: make run-container-tests APP=${{ inputs.app }} TAG=${{ inputs.tag }} type=unit
      shell: sh

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ inputs.app }}:${{ inputs.tag }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
